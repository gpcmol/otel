mode: "deployment"
image:
  repository: "otel/opentelemetry-collector-contrib"
autoscaling:
  enabled: true
  minReplicas: 2
  maxReplicas: 3
resources:
  limits:
    cpu: "1000m"
    memory: "2048Mi"
  requests:
    cpu: "250m"
    memory: "265Mi"
ports:
  jaeger-compact:
    enabled: false
  jaeger-thrift:
    enabled: false
  jaeger-grpc:
    enabled: false
  zipkin:
    enabled: false
config:
  receivers:
    otlp:
      protocols:
        grpc:
          endpoint: "${env:MY_POD_IP}:4317"
        http:
          endpoint: "${env:MY_POD_IP}:4318"
          include_metadata: true
  exporters:
    debug:
      verbosity: detailed
    otlphttp/1:
      endpoint: "http://loki-gateway.loki.svc.cluster.local/otlp"
      sending_queue:
        enabled: true
        num_consumers: 100
        queue_size: 100000
    otlphttp/2:
      endpoint: "http://tempo-gateway.tempo.svc.cluster.local/otlp"
    otlphttp/3:
      endpoint: "http://mimir-nginx.mimir.svc.cluster.local/otlp"
  processors:
    attributes/custom:
      actions:
        - key: system
          value: "talpa-it"
          action: upsert
    filter/drop_actuator:
      traces:
        span:
          - IsMatch(attributes["http.route"], ".*(metrics|prometheus|health)(/.*)?$")
    filter/log_severity:
      logs:
        log_record:
          # drop all log level lower than WARN except for the opt-out applications
          # https://github.com/open-telemetry/opentelemetry-collector-contrib/blob/main/pkg/stanza/docs/types/severity.md
          - '(not IsMatch(resource.attributes["service.name"], "^(car-app|notify-app)$") and severity_number < 13)'
          #- 'severity_number < 13'
    batch:
      send_batch_size: 1000
      timeout: 1s
    memory_limiter:
      check_interval: 1s
      limit_percentage: 80
      spike_limit_percentage: 20
  service:
    extensions: [ health_check ]
    pipelines:
      logs/1:
        receivers: [ otlp ]
        processors: [ filter/log_severity, memory_limiter, batch, attributes/custom ] # keep order
        exporters: [ debug, otlphttp/1 ]
      traces/1:
        receivers: [ otlp ]
        processors: [ memory_limiter, filter/drop_actuator, batch, attributes/custom ] # keep order
        exporters: [ debug, otlphttp/2 ]
      metrics/1:
        receivers: [ otlp ]
        processors: [ memory_limiter, batch ]
        exporters: [ debug, otlphttp/3 ]
  extensions:
    health_check:
      endpoint: "${env:MY_POD_IP}:13133"
